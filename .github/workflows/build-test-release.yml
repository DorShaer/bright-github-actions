name: Build, Test and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allow manual trigger
  workflow_dispatch:

jobs:
  detect-changes:
    runs-on: ubuntu-22.04
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    env:
      HUSKY: 0
    steps:
      - uses: actions/checkout@v4
      
      - name: Get changed directories
        id: set-matrix
        run: |
          DIRS=$(ls -d */ | grep -v 'node_modules\|.git\|.github' | sed 's/\///g' | jq -R -s -c 'split("\n")[:-1]')
          echo "matrix=${DIRS}" >> $GITHUB_OUTPUT

  build-and-test:
    needs: detect-changes
    runs-on: ubuntu-22.04
    env:
      HUSKY: 0
    strategy:
      matrix:
        action: ${{fromJson(needs.detect-changes.outputs.matrix)}}
      fail-fast: false  # Continue with other actions even if one fails
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install root dependencies
        run: npm ci --ignore-scripts
      
      - name: Install action dependencies
        working-directory: ${{ matrix.action }}
        run: npm ci --ignore-scripts
      
      - name: Build
        working-directory: ${{ matrix.action }}
        run: npm run build
      
      - name: Test
        working-directory: ${{ matrix.action }}
        run: |
          if [ -f "package.json" ] && grep -q "\"test\"" "package.json"; then
            npm test
          fi
      
      # Create package for each action
      - name: Package action
        working-directory: ${{ matrix.action }}
        run: |
          if [ -f "package.json" ] && grep -q "\"pack\"" "package.json"; then
            npm run pack
          fi
      
      # Upload the built action as an artifact
      - name: Upload action artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.action }}-build
          path: ${{ matrix.action }}
          retention-days: 1

  # Update release branch
  update-release-branch:
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          ref: release
          fetch-depth: 0
      
      # Download all artifacts
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: downloaded-artifacts
      
      # Prepare release directory structure
      - name: Prepare release directory
        run: |
          mkdir -p release-temp
          
          # For each action directory
          for action_dir in downloaded-artifacts/*-build; do
            action_name=$(basename $action_dir | sed 's/-build$//')
            
            # Create directory for this action
            mkdir -p release-temp/$action_name
            
            # Copy required files
            cp -f $action_dir/action.yml release-temp/$action_name/ || echo "No action.yml found for $action_name"
            cp -f $action_dir/README.md release-temp/$action_name/ || echo "No README.md found for $action_name"
            
            # Copy dist directory if exists
            if [ -d "$action_dir/dist" ]; then
              cp -R $action_dir/dist release-temp/$action_name/
            fi
            
            # Copy LICENSE if exists
            if [ -f "$action_dir/LICENSE" ]; then
              cp $action_dir/LICENSE release-temp/$action_name/
            fi
          done
      
      # Clear existing contents but preserve git history
      - name: Clear existing content
        run: |
          # Save .git directory
          find . -mindepth 1 -maxdepth 1 -not -name '.git' -exec rm -rf {} \;
      
      # Copy new content to root
      - name: Copy new content
        run: |
          cp -R release-temp/* ./
          rm -rf release-temp
      
      # Commit and push changes
      - name: Commit and push to release branch
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add -A
          git diff --cached --quiet || git commit -m "Update release branch from main - $(date +%Y-%m-%d-%H%M%S)"
          git push origin release

  # Create GitHub Release
  create-release:
    needs: update-release-branch
    runs-on: ubuntu-22.04
    env:
      HUSKY: 0
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: npm ci --ignore-scripts
      
      - name: Get version
        id: get_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
      
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          release_name: Release v${{ steps.get_version.outputs.version }}
          body: |
            Release of version ${{ steps.get_version.outputs.version }}
            
            This release includes all actions in the repository:
            - run-discovery
            - run-scan
            - stop-discovery
            - stop-scan
            - wait-for
            - wait-for-discovery
            - list-entrypoints
          draft: false
          prerelease: false